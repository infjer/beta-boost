<template>
    <el-container style="height: 100%;">
        <el-aside width="600px">
            <div id="vis">

            </div>
            <div id="drag1" class="item">drag1</div>
            <div id="drag2" class="item">drag2-limit</div>
        </el-aside>
        <el-main style="padding: 0; border-left: 1px solid #ccc;">
            <div style="height: 30%; border-bottom: 1px solid #ccc;"></div>
            <div style="height: 30%; border-bottom: 1px solid #ccc;" id="chart"></div>
            <div style="height: 40%"></div>
        </el-main>
    </el-container>
</template>

<script>
    import $ from 'jquery';
    // import jsplumb from 'jsplumb';
    // import uuid from 'uuid';
    import highcharts from 'highcharts/highstock';
    import axios from 'axios';
    import query from './scenario5.js';
    import moment from 'moment';
    import vis from 'vis';
    // require('../lib/jsplumbtoolkit');


    export default {
        data() {
            return {

            };
        },
        methods: {
            drawChart(data) {
                highcharts.chart('chart', {
                    credits: false,
                    height: '100%',
                    annotations: [
                        {
                            labelOptions: {
                                allowOverlap: true,
                                crop: true,
                            },
                        },
                    ],
                    chart: {
                        spacing: [20, 20, 20, 20],
                    },
                    title: {
                        text: null,
                    },
                    xAxis: {
                        type: 'datetime',
                        labels: {
                            formatter: function() {
                                return moment(this.value).format('YYYY-MM-DD');
                            },
                            overflow: 'justify',
                            distance: 30,
                        },
                    },
                    yAxis: {
                        title: {
                            text: null,
                        },
                    },
                    legend: {
                        enabled: false,
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'middle',
                    },
                    series: [{
                        data: data.map(i => [Date.UTC(i.date.substr(0, 4) - 0, i.date.substr(5, 2) - 1, i.date.substr(8, 2) - 0), i.net_value]),
                        states: {
                            hover: {
                                enabled: false,
                            },
                        },
                    }],
                    responsive: {
                        rules: [
                            {
                                condition: {
                                    maxWidth: 500,
                                },
                                chartOptions: {
                                    legend: {
                                        layout: 'horizontal',
                                        align: 'center',
                                        verticalAlign: 'bottom',
                                    },
                                },
                            },
                        ],
                    },
                })
            },
        },
        watch: {

        },
        mounted() {
            let container = document.getElementById('vis');
            let nodes = new vis.DataSet([
                { id: 'A', label: 'A64', fixed: false, },
                { id: 'B', label: 'Bh456h3', fixed: false, },
                { id: 'C', label: 'C636y', fixed: false, },
                { id: 'D', label: 'D636', fixed: false, },
                { id: 'E', label: 'Ev2354y2', fixed: false, },
                { id: 'F', label: 'Fwrybw', fixed: false, },
                { id: 'G', label: 'Gywb5', fixed: false, },
                { id: 'H', label: 'Hhwehvv45', fixed: false, },
            ]);
            let edges = new vis.DataSet([
                { from: 'A', to: 'B', roundness: 1, },
                { from: 'B', to: 'C', roundness: 1, },
                { from: 'C', to: 'D', roundness: 1, },
                { from: 'D', to: 'B', roundness: 1, },
                { from: 'C', to: 'E', roundness: 1, },
                { from: 'E', to: 'F', roundness: 1, },
            ]);
            let data = {
                nodes,
                edges,
            };
            let options = {
                height: '600px',
                configure: {
                    enabled: false,
                },
                edges: {
                    arrows: 'to',
                    smooth: false,
                },
                nodes: {
                    shape: 'box',
                },
                groups: {},
                layout: {
                    improvedLayout: true,
                    // hierarchical: {
                    //     direction: 'UD',
                    //     levelSeparation: 75,
                    //     nodeSpacing: 300,
                    //     blockShifting: false,
                    // },
                },
                interaction: {
                    // dragNodes: false,
                    dragView: false,
                    zoomView: false,
                },
                physics: {
                    // enabled: false,
                },
            };
            let network = new vis.Network(container, data, options);
            // setTimeout(() => {
            //     nodes.add({ id: 'I', label: 'Ikdfjakdsfn' });
            // }, 1000)

        },
        created() {
            // axios.post('http://173.82.232.228:443/task', query).then(res => {
            //     console.log(res.data)
            // })
            // axios.get('http://173.82.232.228:443/result/545').then(res => {
            //     console.log(res)
            // })
            let id = '2a00e225-5fad-4bb9-ba73-d174de67fdd8';
            axios.get(`http://173.82.232.228:443/result/${id}`).then(res => {
                this.drawChart(res.data.result);
            })
        }
    }
</script>

<style lang="less">
    .item {
      height: 80px;
      width: 80px;
      border: 2px solid blue;
      border-radius: 4px;
      position: absolute;
      font-size: 16px;
    }
</style>
